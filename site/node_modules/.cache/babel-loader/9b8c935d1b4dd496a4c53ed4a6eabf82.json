{"ast":null,"code":"export async function Authorization() {\n  const url = 'http://127.0.0.1:8000/api/login';\n  const data = {\n    login: \"admin\",\n    password: \"admin\"\n  };\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      // или 'PUT'\n      body: JSON.stringify(data),\n      // данные могут быть 'строкой' или {объектом}!\n      headers: {\n        'Accept': \"application/json\",\n        'Content-Type': \"application/json\"\n      },\n      credentials: 'include'\n    });\n    const json = await response.json();\n    console.log('Успех:', JSON.stringify(json));\n  } catch (error) {\n    console.error('Ошибка:', error);\n  }\n\n  //     user()\n  //\n  //     // получить значения всех cookies страницы\n  //     var cookies = document.cookie;\n  // // выведем куки в консоль браузера\n  //     console.log(cookies);\n  // // выведем с помощью функции alert\n  //     alert(cookies);\n}\n_c = Authorization;\nexport async function User() {\n  const url = 'http://127.0.0.1:8000/api/user';\n  const data = {};\n  try {\n    const response = await fetch(url, {\n      headers: {\n        'Accept': \"application/json\",\n        'Content-Type': \"application/json\"\n      },\n      credentials: 'include'\n    });\n    const json = await response.json();\n    //console.log('Успех:', JSON.stringify(json));\n    //console.log(json.message)\n    return json;\n  } catch (error) {\n    console.error('Ошибка:', error);\n  }\n}\n_c2 = User;\nexport async function Logout() {\n  const url = 'http://127.0.0.1:8000/api/logout';\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      // или 'PUT'\n      headers: {\n        'Accept': \"application/json\",\n        'Content-Type': \"application/json\"\n      },\n      credentials: 'include'\n    });\n    const json = await response.json();\n    console.log('Успех:', JSON.stringify(json));\n  } catch (error) {\n    console.error('Ошибка:', error);\n  }\n}\n_c3 = Logout;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Authorization\");\n$RefreshReg$(_c2, \"User\");\n$RefreshReg$(_c3, \"Logout\");","map":{"version":3,"names":["Authorization","url","data","login","password","response","fetch","method","body","JSON","stringify","headers","credentials","json","console","log","error","User","Logout"],"sources":["C:/Programing/web-service-gin/site/src/Requests.js"],"sourcesContent":["export async function Authorization() {\r\n    const url = 'http://127.0.0.1:8000/api/login';\r\n    const data = {\r\n        login: \"admin\",\r\n        password: \"admin\"\r\n    };\r\n\r\n    try {\r\n        const response = await fetch(url, {\r\n            method: 'POST', // или 'PUT'\r\n            body: JSON.stringify(data), // данные могут быть 'строкой' или {объектом}!\r\n            headers: {\r\n                'Accept': \"application/json\",\r\n                'Content-Type': \"application/json\",\r\n\r\n            },\r\n            credentials: 'include',\r\n        });\r\n        const json = await response.json();\r\n        console.log('Успех:', JSON.stringify(json));\r\n    } catch (error) {\r\n        console.error('Ошибка:', error);\r\n    }\r\n\r\n//     user()\r\n//\r\n//     // получить значения всех cookies страницы\r\n//     var cookies = document.cookie;\r\n// // выведем куки в консоль браузера\r\n//     console.log(cookies);\r\n// // выведем с помощью функции alert\r\n//     alert(cookies);\r\n}\r\nexport async function User() {\r\n    const url = 'http://127.0.0.1:8000/api/user';\r\n    const data = {\r\n    };\r\n\r\n    try {\r\n        const response = await fetch(url, {\r\n            headers: {\r\n                'Accept': \"application/json\",\r\n                'Content-Type': \"application/json\",\r\n\r\n            },\r\n            credentials: 'include',\r\n        });\r\n        const json = await response.json();\r\n        //console.log('Успех:', JSON.stringify(json));\r\n        //console.log(json.message)\r\n        return json\r\n    } catch (error) {\r\n        console.error('Ошибка:', error);\r\n    }\r\n}\r\n\r\nexport async function Logout(){\r\n    const url = 'http://127.0.0.1:8000/api/logout';\r\n    try {\r\n        const response = await fetch(url, {\r\n            method: 'POST', // или 'PUT'\r\n            headers: {\r\n                'Accept': \"application/json\",\r\n                'Content-Type': \"application/json\",\r\n\r\n            },\r\n            credentials: 'include',\r\n        });\r\n        const json = await response.json();\r\n        console.log('Успех:', JSON.stringify(json));\r\n    } catch (error) {\r\n        console.error('Ошибка:', error);\r\n    }\r\n}"],"mappings":"AAAA,OAAO,eAAeA,aAAa,GAAG;EAClC,MAAMC,GAAG,GAAG,iCAAiC;EAC7C,MAAMC,IAAI,GAAG;IACTC,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE;EACd,CAAC;EAED,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;MAC9BM,MAAM,EAAE,MAAM;MAAE;MAChBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC;MAAE;MAC5BS,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MAEpB,CAAC;MACDC,WAAW,EAAE;IACjB,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,EAAE;IAClCC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEN,IAAI,CAACC,SAAS,CAACG,IAAI,CAAC,CAAC;EAC/C,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;EACnC;;EAEJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;AAAC,KAhCqBhB,aAAa;AAiCnC,OAAO,eAAeiB,IAAI,GAAG;EACzB,MAAMhB,GAAG,GAAG,gCAAgC;EAC5C,MAAMC,IAAI,GAAG,CACb,CAAC;EAED,IAAI;IACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;MAC9BU,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MAEpB,CAAC;MACDC,WAAW,EAAE;IACjB,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,EAAE;IAClC;IACA;IACA,OAAOA,IAAI;EACf,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;EACnC;AACJ;AAAC,MArBqBC,IAAI;AAuB1B,OAAO,eAAeC,MAAM,GAAE;EAC1B,MAAMjB,GAAG,GAAG,kCAAkC;EAC9C,IAAI;IACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;MAC9BM,MAAM,EAAE,MAAM;MAAE;MAChBI,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MAEpB,CAAC;MACDC,WAAW,EAAE;IACjB,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,EAAE;IAClCC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEN,IAAI,CAACC,SAAS,CAACG,IAAI,CAAC,CAAC;EAC/C,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;EACnC;AACJ;AAAC,MAjBqBE,MAAM;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}